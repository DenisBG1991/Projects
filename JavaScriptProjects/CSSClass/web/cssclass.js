/**
 * CSSClass.js: функции для работы с CSS-классами HTML-элемента.
 *
 * Данный модуль определяет единственный глобальный символ с именем CSSClass.
 * Этот объект содержит вспомогательные функции для работы с атрибутом class
 * (свойством classname) HTML-элементов. Все функции принимают два аргумента:
 * элемент e, принадлежность которого к CSS-классу требуется проверить
 * или изменить, и соответственно CSS-класс c, принадлежность к которому проверяется,
 * или который добавляется или удаляется. Если элемент e - строка,
 * он воспринимается как значение атрибута id и передается методу
 * document.getElementById().
 */
var CSSClass = {};      // Создать объект пространства имен

// Возвращает true, если элемент e является членом массива, в противном случае - false.
CSSClass.is = function(e, c){
    if (typeof e == "string") e = document.getElementById(e);
    // Прежде чем выполнять поиск с помощью регулярного выражения,
    // оптимизировать для пары наиболее распространенных случаев.
    var classes = e.className;
    if (!classes) return false;
    if (classes == c) return true;

    // Иначе использоваться регулярное выражение для поиска слова c
    // \b в регулярных выражениях означает совпадение с границей слова.
    return e.className.search("\\b" + c + "\\b") != -1;
};

// Добавляет класс с в свойство className элемента e,
// если имя класса уже не было записано ранее.
CSSClass.add = function(e, c){
    if (typeof e == "string") e = document.getElementById(e);
    if (CSSClass.is(e, c)) return;
    if (e.className) c = "" + c;
    e.className += c;
};

// Удалить все вхождения (если таковые имеются) класса c из свойства
// className элемента e
CSSClass.remove = function(e, c){
    if (typeof e == "string") e = document.getElementById(e);

    // Отыскать в className все вхождения с и заменить их "".
    // \s+ соответствует любому числу пробельных символов.
    // "g" заставляет регулярное выражение искать все вхождения.
    e.className = e.className.replace(new RegExp("\\b" + c + "\\b\\s*", "g"),"");
};

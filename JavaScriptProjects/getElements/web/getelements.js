/**
 * getElements(classname, tagname, root):
 * Возвращает массив DOM-элементов, которые являются членами заданного класса,
 * соответствут тегам с определенным именем и вложены в элемент root.
 *
 * Если аргумент classname не определен, отбор элементов производится
 * без учета принадлежности к какому-то определенному классу.
 * Если аргумент tagname не определен, отбор элементов производится без учета имени тега.
 * Если аргумент root не определен, поиск производится в объекте document.
 * Если арнумент root является строкой, он воспринимается как идентификатор
 * элемента и поиск производится методом getElementsById().
 */
function getElements(classname, tagname, root){
    // Если корневой элемент не определен, произвести поиск по всему документу.
    // Если это строка, найти сам объект.
    if (!root) root = document;
    else if (typeof root == "string") root = document.getElementById(root);

    // Если имя тега не определено, искать без учета имени тега.
    if (!tagname) tagname = "*";

    // Искать элементы, вложенные в элемент root и имеющие определенное имя тега.
    var all = root.getElementsByTagName(tagname);

    // Если имя класса не определено, вернуть все теги без учета имени класса.
    if (!classname) return all;

    // В противном случае отобрать элементы по имени класса.
    var elements = [];              // Создается пустой массив
    for (var i = 0; i < all.length; i++){
        var element = all[i];
        if (isMember(element, classname))   // Метод isMember() определен далее
            elements.push(element);         // Добавлять члены класса в массив
    }

    // Обратите внимание: всегда возвращается массив, даже если он пустой.
    return elements;

    // Определяет принадлежность элемента к заданному классу.
    // Эта функция оптимизирована для случая, когда свойство
    // classname содержит единственное имя класса. Но учитывает возможность
    // наличия нескольких имен классов, разделенных прбелами.
    function isMember(element, classname){
        var classes = element.className;        // Получить список классов
        if (!classes) return false;             // Класс не определен
        if (classes == classname) return true;  // Точное совпадение

        // Нет точного совпадения, поэтому если в списке нет пробелов,
        // то этот элемент не является членом класса.
        var whitespace = /\s+/;
        if (!whitespace.test(classes)) return false;

        // В этой точке известно, что элемент принадлежит нескольким
        // классам, поэтому нужно проверить каждый из них.
        var c = classes.split(whitespace);      // Разбить по символам пробелов
        for (var j = 0; j < c.length; j++){     // Цикл по всем классам
            if (c[j] == classname) return true; // Проверить совпадение
        }

        return false;       // Не обнаружено ни одного совпадения.
    }
}